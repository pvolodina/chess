package main;

public class Check extends Board {
    private Board board;

    public Check() {
        board = new Board();
        board.initPieces(board);
    }

    public Piece getKing(int player) {
        for (int i = 0; i < board.getRowSize(); i++) {
            for (int j = 0; j < board.getColSize(); j++) {
                Piece p = board.getPiece(i, j);
                if ((p != null) && (p instanceof King) && (p.getPlayer() == player)) {
                    return p;
                }
            }
        }
        return null;
    }

    public boolean kingCheckedDiagonally(Piece piece) {
        // implement
        return false;
    }

    public boolean kingCheckedLinearly(Piece piece) {
        // implement
        return false;
    }

    public boolean knightPositionCheck(int x, int y, int player) {
        Piece piece = board.getPiece(x, y);
        return (piece instanceof Knight) && (piece.getPlayer() == player);
    }

    public boolean kingCheckedByKnight(Piece piece, int player) {
        int x = piece.getPosition().getRow();
        int y = piece.getPosition().getCol();
        if (knightPositionCheck(x + 1, y + 2, player)) { return true; }
        if (knightPositionCheck(x + 2, y + 1, player)) { return true; }
        if (knightPositionCheck(x - 1, y + 2, player)) { return true; }
        if (knightPositionCheck(x - 2, y + 1, player)) { return true; }
        if (knightPositionCheck(x + 1, y - 2, player)) { return true; }
        if (knightPositionCheck(x + 2, y - 1, player)) { return true; }
        if (knightPositionCheck(x - 1, y - 2, player)) { return true; }
        if (knightPositionCheck(x - 2, y - 1, player)) { return true; }
        return false;
    }

    public boolean isChecked(int player) {
        Piece k = getKing(player);
        return kingCheckedByKnight(k, player) || kingCheckedDiagonally(k) || kingCheckedLinearly(k);
    }

    public boolean checkmate() {
        // TODO: implement
        return true;
    }

    public boolean stalemate() {
        // TODO: implement
        return true;
    }
}
